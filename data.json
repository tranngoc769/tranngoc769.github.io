[
  {
 "cate": "f-php",
 "category": "PHP,CodeIgniter 3",
 "name": "Website selling water purifiers",
 "image": "MLN.PNG",
 "slug": "purifier-shop",
 "desc": "<div class='content'><div class='image' style='background-image: url(images/MLN.PNG);'></div><div class='desc single-post-text'>  <div class='category'></div>  <h4>TWebsite selling water purifiers</h4>  <p>Website selling water purifiers</p>  <h4>Technically, this project is a combination of the following knowledge</h4>  <ul><li>PHP CodeIgniter 4, HTML, CSS, JS</li><li>MySQL</li>  </ul>  <h4>Main Features : </h4>  <h5>Admin roles:</h5>  <ul><li>Create, update, delete users, products,</li><li>Upload images to products</li><li>Writing blogs</li>  </ul>  <div style='display: table;margin: auto;'><a target='_blank' style='margin: 0px 20px;' href='https://github.com/tranngoc769/ShopManager-Php-CodeIgniter' class='btn hover-animated'><span class='circle'></span><span class='lnk'>View Source</span></a>  </div></div> </div>"
  },
  {
 "cate": "f-nodejs",
 "category": "NodeJS HTML CSS JS",
 "name": "Telegram Timekeeping",
 "image": "TimeKeeping.PNG",
 "slug": "time-keeping",
 "desc": "<div class='content'>  <div class='image' style='background-image: url(images/TimeKeeping.PNG);'></div>  <div class='desc single-post-text'> <div class='category'></div> <h4>Telegram Timekeeping</h4> <p>Users can checking, checkout by chating in to Telegram group <br>The software'll automatic timekeeping andsavethe history</p> <h4>Technically, this project is a combination of the following knowledge</h4> <ul><li>NodeJS-Express, HTML, CSS, JS</li><li>Integrating Telegram BOT API</li><li>MySQL</li> </ul> <h4>Main Features : </h4> <h5>Admin roles:</h5> <ul><li>Create, update, delete groups, classes, users</li><li>Change role users</li><li>Statistical data reports</li><li>Change site setting</li> </ul> <h5>Leader roles:</h5> <ul><li>Add users to own groups</li><li>Create, update, disable user of own groups</li><li>Statistical data reports of own groups</li><li>Manage list working, free users</li><li>Handle the payment status of the class</li> </ul> <h5>User roles (via Telegram chatting):</h5> <ul><li>Register themself to system then waiting for approval</li><li>Checking</li><li>Checkout</li><li>- Usages</li><li>Join group, text: /dangky -help</li><li>When successful registration, user is able to checkin and checkout</li><li>Text: /VAO -help for instructions to checkin</li><li>Text: /RA -help for instructions to checkout</li> </ul> <h4>Usages</h4> <h5>Admin</h5> <ul><li>Username: admin</li><li>Password: Quangtran7699@admin</li><li>Url:<a target='_blank' style='margin: 0px 20px;' href='http://tranngoc.website'>Admin Area</a></li> </ul> <h5>Leader</h5> <ul><li>Username: leader</li><li>Password: Quangtran7699@leader</li><li>Url:<a target='_blank' style='margin: 0px 20px;' href='http://tranngoc.website'>Leader Area</a></li> </ul> <h5>User</h5> <ul><li>Join group, text: /dangky -help</li><li>When successful registration, user is able to checkin and checkout</li><li>Text: /VAO -help for instructions to checkin</li><li>Text: /RA -help for instructions to checkout</li> </ul> <div style='display: table;margin: auto;'> <a target='_blank' style='margin: 0px 20px;'  href='https://github.com/tranngoc769/ClassManager' class='btn hover-animated'> <span class='circle'></span>  <span class='lnk'>View Source</span> </a> <a target='_blank' style='margin: 0px 20px;'  href='http://tranngoc.website' class='btn hover-animated'> <span class='circle'></span> <span class='lnk'>Viewdemo</span> </a> <a target='_blank' style='margin: 0px 20px;'  href='https://t.me/group_av_demo' class='btn hover-animated'> <span class='circle'></span> <span class='lnk'>Group Demo</span> </a> </div>  </div></div>"
  },
  {
 "cate": "f-csharp",
 "category": "C# WPF",
 "name": "Hotel Management",
 "image": "hotel.PNG",
 "slug": "hotel-management",
 "desc": "<div class='content'><div class='image' style='background-image: url(images/hotel.PNG);'></div><div class='desc single-post-text'>  <div class='category'></div>  <h4>Hotel Management</h4>  <p>A software that supports reservation management, service management, staff management, data statistics reportingy  </p>  <h4>Technically, this project is a combination of the following knowledge</h4>  <ul> <li>C# (WPF)</li> <li>C# design patterns</li> <li>MSSQL</li>  </ul>  <h4>Main Features : </h4>  <h5>Admin roles:</h5>  <ul> <li>Create, update, delete users, room, services, parameters</li> <li>Change role users</li> <li>Statistical data reports</li> <li>Others</li>  </ul>  <h5>Accountant roles:</h5>  <ul> <li>Statistical data reports</li>  </ul>  <h5>User roles:</h5>  <ul> <li>Manage reservations, invoices, room services</li> <li>Look up information</li>  </ul>  <div style='display: table;margin: auto;'> <a target='_blank' style='margin: 0px 20px;'href='https://github.com/tranngoc769/TKPM-QuanLyKhachSan' class='btn hover-animated'> <span  class='circle'></span><span class='lnk'>View Source</span> </a><a target='_blank' style='margin: 0px 20px;' href='https://www.youtube.com/watch?v=20od6uzLJ7s' class='btn hover-animated'> <span class='circle'></span> <span class='lnk'>View demo 1</span></a><a target='_blank' style='margin: 0px 20px;' href='https://www.youtube.com/watch?v=5He88ZQYcqo' class='btn hover-animated'> <span class='circle'></span> <span class='lnk'>View demo upgrade version</span></a></div></div> </div>"
  },
  {
 "cate": "f-csharp",
 "category": "WPF C#",
 "name": "Media Player",
 "image": "media_main.png",
 "slug": "media-player",
 "desc": "<div class='content'> <div class='image' style='background-image: url(images/mediaplayer.png);'></div> <div class='desc single-post-text'> <div class='category'></div> <h4>Media Player</h4> <p>The player selects an image file, the program will cut from the original image into 9 separate thumbnails with random position. One of the 9 pieces (mostly in the bottom left or right corner) will be left empty. <br>The player moves one cell at a time to the remaining cells to replace the empty ones so that the remaining 8 cells are in the final position. </p> <h4>Technically, this project is a combination of the following knowledge</h4> <ul> <li>The basic control of wpf and how to create source verbs</li> <li>Label, TextBlock, TextBox, Button, Image, Timer</li> <li>Data transfer between screens</li> <li>Working with graphic objects</li> <li>Create interface layout using containers : Canvas, StackPanel, Grid</li> <li>OOP with C#</li> </ul> <h4>Main Features : </h4> <ul> <li>Create a blank playlist and add multimedia files </li> <li>Select a file to play </li> <li>Display progress of the currently playing file (from 0: 0 to the total time of the file, for example 5:30 </li> <li>Pause / Play another file </li> <li>Go to a time to play </li> <li>Terminate playing a file </li> <li>Remove one / more files from the playlist </li> <li>Play playlist sequential or random </li> <li>Play playlist by repeating mode 1 time or endless loop </li> <li>Save playlist, reload playlist from saved file </li> <li><b>Save and reload the information after the program runs up</b> </li> <li>Playlist last playlist </li> <li>The file of the playlist was last played so the user started playing again </li> <li>Hook the keyboard to play / pause, next, previous command </li> </ul> <div style='display: table;margin: auto;'> <a target='_blank' style='margin: 0px 20px;' href='https://github.com/tranngoc769/MusicPlayer' class='btn hover-animated'> <span class='circle'></span> <span class='lnk'>View Project</span> </a> <a target='_blank' style='margin: 0px 20px;' href='exe/MediaPlayer.rar' class='btn hover-animated'> <span class='circle'></span> <span class='lnk'>Download executable file</span> </a> </div> <br> <h4>Demo :</h4> <iframe src='https://www.youtube.com/embed/ebvB6U9xjI4' frameborder='0' allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe> </div></div>"
  },
  {
 "cate": "f-csharp",
 "category": "WPF C#",
 "name": "Puzzle game",
 "slug": "",
 "image": "puzzle_main.png",
 "desc": " <div class='content'> <div class='image' style='background-image: url(images/puzzle.png);'></div> <div class='desc single-post-text'> <div class='category'></div> <h4>Puzzle game</h4> <p>The player selects an image file, the program will cut from the original image into 9 separate thumbnails with random position. One of the 9 pieces (mostly in the bottom left or right corner) will be left empty. <br>The player moves one cell at a time to the remaining cells to replace the empty ones so that the remaining 8 cells are in the final position. </p> <h4>Technically, this project is a combination of the following knowledge</h4> <ul> <li>The basic control of wpf and how to create source verbs</li> <li>Label, TextBlock, TextBox, Button, Image, Timer</li> <li>Data transfer between screens</li> <li>Working with graphic objects</li> <li>Create interface layout using containers : Canvas, StackPanel, Grid</li> <li>Object-oriented with C#</li> </ul> <h4>Main Features : </h4> <ul> <li> Select the image to cut out 8 (or 35, 80) boxes and display these 8 boxes in a random order (need to show the original image for the player to know) </li> <li> Drag and drop a cell with the mouse to replace the empty cell </li> <li> Drag and drop automatically snap to the nearest cell rather than dragging exactly </li> <li> Use 4 buttons to control with 4 directions left, right, up, down to automatically move a cell to replace a blank cell </li> <li> When starting to play a game, turn on the timer for example for only 3 minutes </li> <li> Check the final result, announce winning or losing if time runs out </li> <li> Neat and tidy interface with complete data entry errors </li> <li> Save and reload unfinished games to continue playing - Only required to save 1 game is enough without having to save multiple games </li> </ul> <div style='display: table;margin: auto;'> <a target='_blank' style='margin: 0px 20px;' href='https://github.com/tranngoc769/PuzzleGame' class='btn hover-animated'> <span class='circle'></span> <span class='lnk'>View Project</span> </a> <a target='_blank' style='margin: 0px 20px;' href='exe/Puzzle.rar' class='btn hover-animated'> <span class='circle'></span> <span class='lnk'>Download executable file</span> </a> </div> <br> <h4>Demo :</h4> <iframe src='https://www.youtube.com/embed/kzMmibrAgQ0' frameborder='0' allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe> </div> </div>"
  },
  {
 "cate": "f-python",
 "category": "Python Machine Learning",
 "name": "Face Detect Roll Up",
 "image": "face.PNG",
 "slug": "",
 "desc": "<div class='content'> <div class='image' style='background-image: url(images/face.PNG);'></div> <div class='desc single-post-text'> <div class='category'></div> <h4>Face Detect Roll Up</h4> <p>The teacher can roll up students using their face.</p> <h4>Technically, this project is a combination of the following knowledge</h4> <ul> <li>The basic control of tkinter and how to create display</li> <li>Label, TextBlock, TextBox, Button, Image, Timer</li> <li>Data transfer between screens</li> <li>Working with graphic objects</li> <li>Using database with SQLLite</li> </ul> <h4>Main Features : </h4> <ul> <li>Real-time attendance management </li> <li>Student list stored from database </li> <li>Manage student by class </li> <li>Add students / update students to database </li> <li>Scan students' faces, encrypt faces </li> <li>Take attendance by real-time faces according to lessons </li> <li>Write the log </li> <h5 style='color: aliceblue;'>It has been a long time ago since I written it. I'll upgrade it in the future </h5> </ul> <div style='display: table;margin: auto;'> <a target='_blank' style='margin: 0px 20px;' href='https://github.com/tranngoc769/Face-Roll-Up' class='btn hover-animated'> <span class='circle'></span> <span class='lnk'>View Project</span> </a> </div> <br> <h4>Demo :</h4> <iframe src='https://www.facebook.com/plugins/video.php?href=https%3A%2F%2Fwww.facebook.com%2Ftranngoc769%2Fvideos%2F2366667710268500%2F&show_text=1&width=560' style='border:none;overflow:hidden' scrolling='no' frameborder='0' allowTransparency='true' allow='encrypted-media' allowFullScreen='true'></iframe> </div> </div>"
  },
  {
 "cate": "f-nodejs",
 "category": "NodeJS HTML CSS JS",
 "name": "Chat Room NodeJS - React",
 "image": "chatroom.PNG",
 "desc": "<div class= 'content '> <div class= 'image ' style= 'background-image: url(images/chatroom.PNG); '></div> <div class= 'desc single-post-text '> <div class= 'category '></div> <h4>Chat Room</h4> <p>A website allow multiple user join any room and chat with other people in that room </p> <h4>Technically, this project is a combination of the following knowledge</h4> <ul> <li>The basic HTML, JS, CSS, JQUERRY</li> <li>The basic NodeJS and React</li> <li>Using Socket-IO to chat to another</li> </ul> <h4>Main Features : </h4> <ul> <li>Join room with username and room name </li> <li>Chat with other people in room </li> <li>Leave room </li> <h5 style= 'color: aliceblue; '>It has been a long time ago since I written it. I'll upgrade it in the future </h5> </ul> <div style= 'display: table;margin: auto; '> <a target= '_blank ' style= 'margin: 0px 20px; ' href= 'https://github.com/tranngoc769/Messenger ' class= 'btn hover-animated '> <span class= 'circle '></span> <span class= 'lnk '>View Project</span> </a> <a target= '_blank ' style= 'margin: 0px 20px; ' href= 'https://chatroomvn.netlify.app ' class= 'btn hover-animated '> <span class= 'circle '></span> <span class= 'lnk '>View Website</span> </a> </div> <br> <h4>Demo :</h4> <iframe src= 'https://www.facebook.com/plugins/video.php?href=https%3A%2F%2Fwww.facebook.com%2Ftranngoc769%2Fvideos%2F2545742799027656%2F&show_text=1&width=560 ' style= 'border:none;overflow:hidden ' scrolling= 'no ' frameborder= '0 ' allowTransparency= 'true ' allow= 'encrypted-media ' allowFullScreen= 'true '></iframe> </div> </div>"
  },
  {
 "cate": "f-nodejs",
 "category": "NodeJS MySQL#",
 "name": "Auction - Bidding",
 "image": "auction.PNG",
 "slug": "",
 "desc": "<div class= 'content '> <div class= 'image ' style= 'background-image: url(images/auction_2.PNG); '></div> <div class= 'desc single-post-text '> <div class= 'category '></div> <h4>Auction - Bidding</h4> <p>A website allow multiple user join any room and chat with other people in that room </p> <h4>Technically, this project is a combination of the following knowledge</h4> <ul> <li>The basic HTML, JS, CSS, JQUERRY</li> <li>The basic NodeJS and React</li> <li>Using Socket-IO to chat to another</li> </ul> <h4>Main Features : </h4> <h4> Anonymous user module </h4> <ul> <li> Homepage <ul> <li> Top 5 products with the most bids (sorted by descending number) </li> <li> Top 5 unfinished products with the highest prices </li> <li> Top 5 products near the end (sorted by descending end time) </li> </ul> </li> <li> Menu System: Displays the list of `category` </li> <li> Search for products / View product list <ul> <li> Lets search by many criteria: name, type, ... </li> <li> Support paging </li> <li> Support rearranging search results (downtime ends, prices rise, ...) </li> <li> New products posted in N minutes may appear different </li> <li> Full information: name, photo, current price, price holder (masked, eg nndkhoa will expressed in departmental format ****), remaining time, number of available bids </li> </ul> </li> <li> View product details <ul> <li> Display multiple images (minimum of 3 images) </li> <li> Product photos shown in the slideshow, with photo transition effects </li> <li> Format product descriptions (using HTML) </li> <li> Full information: name, current price, current purchase price (if any), seller & review (url), current highest bidder & review (url), posting time, closing time end (relative-time) </li> <li> Seller sees masked-username & detailed review link of BIDDER </li> <li> Bidder sees masked-username & detailed link of SELLER review </li> </ul> </li> <li> Sign in </li> <li> Registration <ul> <li> Encrypted passwords with salt </li> <li> Check if the email doesn't match </li> </ul> </li> </ul> <h4> Buyer module - `bidder` </h4> <ul> <li> Save 1 item to your favorite list (Watch List) <ul> <li> View product listings / find products </li> <li> View product details </li> </ul> </li> <li> Price 1 product in view to see the product details <ul> <li> Get confirmation before bidding </li> <li> Having a test score greater than 80% gives you a price </li> <li> There is a minimum price proposal (current price + price step) </li> </ul> </li> <li> See product auction history </li> <li> Manage your profile <ul> <li> Change your personal information and password </li> <li> See details of the review and% of yourself </li> </ul> </li> <li> See the list of favorite products (watch list) </li> <li> See a list of products currently in the bidding list </li> <li> See the list of products that you have won (won list) </li> <li> Review sellers </li> <li> Request upgrade to a merchant account </li> </ul> <h4> seller module - `seller` </h4> <ul> <li> Post auction products <ul> <li> Use the WYSIWYG Editor for the description </li> <li> Upload at least 3 product photos </li> </ul> </li> <li> Reject the bidder's bid <ul> <li> The buyer is denied permission to bid on this product again </li> <li> If the rejected buyer is the highest bid buyer, the product passes to the second highest buyer. </li> </ul> </li> <li> Add description information for the product </li> <li> See a list of products that are sold & are subject to auctions </li> <li> See a list of products that have been purchased </li> <li> Evaluate the winner </li> </ul> <h4> Admin module - `admin` </h4> <ul> <li> Approving the request to upgrade your account to a selling account </li> <li> Manage user lists </li> <li> Catalog management (add / delete / edit) </li> </ul> </ul> <div style= 'display: table;margin: auto; '> <a target= '_blank ' style= 'margin: 0px 20px; ' href= 'https://gitlab.com/MEOGODHAND/auction-nodejs/-/tree/master ' class= 'btn hover-animated '> <span class= 'circle '></span><span class= 'lnk '>View Project</span></a> <a target= '_blank ' style= 'margin: 0px 20px; ' href= 'https://auctionvn.herokuapp.com ' class= 'btn hover-animated '> <span class= 'circle '></span><span class= 'lnk '>View Website</span></a> </div> <br> </div> </div>"
  },
  {
 "cate": "f-python f-nodejs",
 "category": "Python, NodeJS, SocketIO",
 "name": "Manager Desktop Online",
 "image": "center.PNG",
 "slug": "",
 "desc": "<div class= 'content '> <div class= 'image ' style= 'background-image: url(images/center.PNG); '></div> <div class= 'desc single-post-text '> <div class= 'category '></div> <h4>Manager Desktop Online</h4> <p>The admin can manager multiple desktop on the website server.</p> <p>Personal, users can protect computer from the robs by using the camera and email report. </p> <h4>Technically, this project is a combination of the following knowledge</h4> <ul> <li>The basic NodeJS , Python, Socket-IO</li> <li>Using OpenCV to capture image, video</li> <li>Data transfer client and server</li> <li>File operation with python</li> <li>Send email using HTTPS</li> </ul> <h4>Main Features : </h4> <ul> <li>Client connect to server using socketio </li> <li>Server can manage client using the panel form </li> <li>Client auto send mail report status to server each 10 minute </li> <li>Files are saved on host </li> <h5 style= 'color: aliceblue; '>It is 1.0 version. I'll upgrade it in the future </h5> </ul> <div style= 'display: table;margin: auto; '> <a target= '_blank ' style= 'margin: 0px 20px; ' href= 'https://github.com/tranngoc769/centersever ' class= 'btn hover-animated '> <span class= 'circle '></span> <span class= 'lnk '>View Project</span> </a> </div> <br> <h4>Demo :</h4> <iframe width= '560 ' height= '315 ' src= 'https://www.youtube.com/embed/4ULj8ZwdTZA ' frameborder= '0 ' allow= 'accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture ' allowfullscreen></iframe> </div> </div>"
  },
  {
 "cate": "f-csharp",
 "category": "Unity Engine C#",
 "name": "Flappy Dog",
 "slug": "",
 "image": "dog_main.jpg",
 "desc": "<div class='content'> <div class='image' style='background-image: url(images/dog.PNG);'></div> <div class='desc single-post-text'> <div class='category'></div> <h4>Flappy Dog</h4> <p>A game look like flappy bird.</p> <p>You have to drive to dog jump over the pilasters.</p> <h4>Technically, this project is a combination of the following knowledge</h4> <ul> <li>The basic C#, unity</li> </ul> <h4>Main Features : </h4> <ul> <li>Jumpr over the pilasters, increase point </li> <li>If the dog hit the collision, it will die </li> <li>If the dog hit the ground, it will die </li> <li>If the dog die, game over, the dog thief catch the dog </li> </ul> <div style='display: table;margin: auto;'> <a target='_blank' style='margin: 0px 20px;' href='https://drive.google.com/file/d/11p9GUB7FpH1fys_VyRFRGFBm441TIBUI/view' class='btn hover-animated'> <span class='circle'></span> <span class='lnk'>Download</span> </a> </div> <br> <h4>Demo :</h4> <iframe src='https://www.facebook.com/plugins/video.php?href=https%3A%2F%2Fwww.facebook.com%2Ftranngoc769%2Fvideos%2F2027957980806143%2F&show_text=0&width=368' width='368' height='476' style='border:none;overflow:hidden' scrolling='no' frameborder='0' allowTransparency='true' allowFullScreen='true'></iframe> </div> </div>"
  },
  {
 "cate": "f-nodejs",
 "category": "NodeJS",
 "slug": "",
 "name": "SIMSIMI API",
 "image": "sim.PNG",
 "desc": "<div class='content'> <div class='image' style='background-image: url(images/sim.PNG);'></div> <div class='desc single-post-text'> <div class='category'></div> <h4>SIMSIMI API</h4> <p>An API for chatbot messenger</p> <h4>Technically, this project is a combination of the following knowledge</h4> <ul> <li>The basic NodeJS - Router</li> <li>Basic MySQL connection</li> </ul> <h4>Main Features : </h4> <ul> <li>API for users to call to get chat words from input word </li> <li>Altenate key when it is out of date </li> <li>In order to use the API unlimited, users can give website some key by input into the form. </li> </ul> <div style='display: table;margin: auto;'> <a target='_blank' style='margin: 0px 20px;' href='https://github.com/tranngoc769/SimAPI' class='btn hover-animated'> <span class='circle'></span> <span class='lnk'>View Project</span> </a> <a target='_blank' style='margin: 0px 20px;' href='http://tranngoc-simsimi.herokuapp.com/' class='btn hover-animated'> <span class='circle'></span> <span class='lnk'>View Website</span> </a> </div> <br> </div></div>"
  },
  {
 "cate": "f-csharp",
 "category": "Unity Engine C#",
 "name": "Infinity Run",
 "image": "run.PNG",
 "slug": "",
 "desc": "<div class='content'> <div class='image' style='background-image: url(images/run.PNG);'></div> <div class='desc single-post-text'> <div class='category'></div> <h4>Infinity Run</h4> <p>A simple game.</p> <h4>Technically, this project is a combination of the following knowledge</h4> <ul> <li>The basic C#</li> <li>The basic Uniti conrroller</li> <li>Build to windows application and android application</li> </ul> <h4>Main Features : </h4> <ul> <li>Control character to avoid the obstacles </li> </ul> <!-- <div style='display: table;margin: auto;'> <a target='_blank' style='margin: 0px 20px;' href='https://www.facebook.com/tranngoc769/videos/vb.100007758817089/2567768476825088/?type=3' class='btn hover-animated'> <span class='circle'></span> <span class='lnk'>View Demo</span> </a> </div> --> <iframe src='https://www.facebook.com/plugins/video.php?href=https%3A%2F%2Fwww.facebook.com%2Ftranngoc769%2Fvideos%2F2524493141152622%2F&show_text=0&width=560' width='560' height='315' style='border:none;overflow:hidden' scrolling='no' frameborder='0' allowTransparency='true' allowFullScreen='true'></iframe> </div> </div>"
  }
]